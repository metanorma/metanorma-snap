name: main

on:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:

jobs:
  build:
    name: Build metanorma snap
    runs-on: ubuntu-18.04
    outputs:
      snap_version: ${{ steps.snap_version.outputs.result }}
      track_version: ${{ steps.track_version.outputs.result }}
    steps:
      - uses: actions/checkout@v2

      - run: |
          snap_version=$(yq e '.version' snap/snapcraft.yaml)
          echo "Snap version: ${snap_version}"

      - name: Install Snapcraft with LXD
        uses: samuelmeuli/action-snapcraft@v1
        with:
          use_lxd: true

      - name: Snapcraft setup
        run: |
          sudo apt-get update
          sudo apt-get install -y squashfs-tools python3 curl
          snapcraft --version

      - name: Build snap
        run: sg lxd -c 'snapcraft snap --debug --output metanorma.snap --use-lxd'

      - name: Fix snap
        run: | # https://forum.snapcraft.io/t/automated-reviews-and-snapcraft-2-38/4982/2
          unsquashfs metanorma.snap
          sudo chmod -R g-s ./squashfs-root
          mksquashfs ./squashfs-root ./metanorma_fixed.snap -noappend -comp xz -all-root -no-xattrs -no-fragments

      - id: snap_version
        uses: mikefarah/yq@master
        with:
          cmd: yq '.version' snap/snapcraft.yaml

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'

      - id: track_version
        run: |
          curl -LO --retry 3 https://raw.githubusercontent.com/metanorma/metanorma-build-scripts/main/gemver-to-semver.rb && chmod +x gemver-to-semver.rb
          track_version=$(./gemver-to-semver.rb -d -k 3 ${{ steps.snap_version.outputs.result }})
          echo "::set-output name=result::${track_version}"

      - uses: actions/upload-artifact@v1
        with:
          name: metanorma-snap
          path: metanorma_fixed.snap

  test:
    name: Test metanorma snap
    needs: build
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.flavor.experimental }}
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04 ]
        flavor:
        - id: iso
          experimental: false
        - id: cc
          experimental: false
        - id: iec
          experimental: false
        - id: ogc
          experimental: false
        - id: un
          experimental: false
        - id: iho
          experimental: false
        - id: ietf
          experimental: false
        - id: bipm
          experimental: false
        - id: itu
          experimental: false
        - id: csa
          experimental: false
        - id: m3aawg
          experimental: true
        - id: jcgm
          experimental: true
    steps:
      - run: sudo apt update && sudo apt install -y snapd

      - uses: actions/download-artifact@v1
        with:
          name: metanorma-snap
          path: ./snap

      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 0

      - run: sudo snap install snap/metanorma_fixed.snap --devmode

      - name: Fetch samples (${{ matrix.flavor.id }})
        uses: actions/checkout@v3
        with:
          submodules: recursive
          repository: metanorma/mn-samples-${{ matrix.flavor.id }}
          token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
          fetch-depth: 1

      - uses: actions-mn/cli/site-gen@main
        with:
          agree-to-terms: true

  release-edge:
    if: github.ref == 'refs/heads/master'
    name: Release edge snap
    needs: [build, test]
    runs-on: ubuntu-latest
    container:
      image: snapcore/snapcraft:stable
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: metanorma-snap
          path: ./snap
      - name: Push to snapcraft.io
        env:
          SNAPCRAFT_TOKEN: ${{ secrets.METANORMA_SNAPCRAFT_TOKEN }}
        run: |
          echo "${SNAPCRAFT_TOKEN}" > .snapcraft_token
          snapcraft login --with .snapcraft_token
          snapcraft push --release=edge snap/metanorma_fixed.snap

  release-candidate:
    if: startsWith(github.ref, 'refs/tags/v') && endsWith(github.ref, 'pre')
    name: Release stable snap
    needs: [build, test]
    runs-on: ubuntu-latest
    container:
      image: snapcore/snapcraft:stable
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: metanorma-snap
          path: ./snap
      - name: Push to snapcraft.io
        env:
          SNAPCRAFT_TOKEN: ${{ secrets.METANORMA_SNAPCRAFT_TOKEN }}
          TRACK_VERSION: ${{ needs.build.outputs.track_version }}
        run: |
          echo "${SNAPCRAFT_TOKEN}" > .snapcraft_token
          snapcraft login --with .snapcraft_token
          snapcraft push --release=candidate,${TRACK_VERSION}/candidate snap/metanorma_fixed.snap

  release-stable:
    if: startsWith(github.ref, 'refs/tags/v') && !endsWith(github.ref, 'pre')
    name: Release stable snap
    needs: [build, test]
    runs-on: ubuntu-latest
    container:
      image: snapcore/snapcraft:stable
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@v1
        with:
          name: metanorma-snap
          path: ./snap
      - name: Push to snapcraft.io
        env:
          SNAPCRAFT_TOKEN: ${{ secrets.METANORMA_SNAPCRAFT_TOKEN }}
          TRACK_VERSION: ${{ needs.build.outputs.track_version }}
        run: |
          echo "${SNAPCRAFT_TOKEN}" > .snapcraft_token
          snapcraft login --with .snapcraft_token
          snapcraft push --release=stable,${TRACK_VERSION}/stable snap/metanorma_fixed.snap
