name: main

on:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:

jobs:
  build:
    name: Build metanorma snap
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - id: snapcraft
        uses: snapcore/action-build@v1
        with:
          path: snap

      - uses: actions/upload-artifact@v3
        with:
          name: metanorma-snap
          path: ${{ steps.snapcraft.outputs.snap }}
          retention-days: 5

  test:
    name: Test metanorma snap
    needs: build
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.flavor.experimental }}
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
        flavor:
        - id: iso
          experimental: false
        - id: cc
          experimental: false
        - id: iec
          experimental: false
        - id: ogc
          experimental: false
        - id: un
          experimental: false
        - id: iho
          experimental: false
        - id: ietf
          experimental: false
        - id: bipm
          experimental: false
        - id: itu
          experimental: false
        - id: csa
          experimental: false
        - id: m3aawg
          experimental: true
        - id: jcgm
          experimental: true
    steps:
      - run: sudo apt update && sudo apt install -y snapd

      - uses: actions/download-artifact@v3
        with:
          name: metanorma-snap
          path: ./snap

      - run: sudo snap install snap/*.snap --devmode

      - name: Fetch samples (${{ matrix.flavor.id }})
        uses: actions/checkout@v3
        with:
          submodules: recursive
          repository: metanorma/mn-samples-${{ matrix.flavor.id }}
          token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
          fetch-depth: 1

      - uses: actions-mn/site-gen@v1
        with:
          agree-to-terms: true

  release-edge:
    if: github.ref == 'refs/heads/master'
    name: Release edge snap
    needs: [build, test]
    runs-on: ubuntu-latest
    container:
      image: snapcore/snapcraft:stable
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: metanorma-snap
          path: ./snap
      - name: Push to snapcraft.io
        env:
          SNAPCRAFT_TOKEN: ${{ secrets.METANORMA_SNAPCRAFT_TOKEN }}
        run: |
          echo "${SNAPCRAFT_TOKEN}" > .snapcraft_token
          snapcraft login --with .snapcraft_token
          snapcraft push --release=edge snap/*.snap

  release-candidate:
    if: startsWith(github.ref, 'refs/tags/v') && endsWith(github.ref, 'pre')
    name: Release stable snap
    needs: [build, test]
    runs-on: ubuntu-latest
    container:
      image: snapcore/snapcraft:stable
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: metanorma-snap
          path: ./snap
      - name: Push to snapcraft.io
        env:
          SNAPCRAFT_TOKEN: ${{ secrets.METANORMA_SNAPCRAFT_TOKEN }}
        run: |
          echo "${SNAPCRAFT_TOKEN}" > .snapcraft_token
          snapcraft login --with .snapcraft_token
          snapcraft push --release=candidate snap/*.snap

  release-stable:
    if: startsWith(github.ref, 'refs/tags/v') && !endsWith(github.ref, 'pre')
    name: Release stable snap
    needs: [build, test]
    runs-on: ubuntu-latest
    container:
      image: snapcore/snapcraft:stable
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: metanorma-snap
          path: ./snap
      - name: Push to snapcraft.io
        env:
          SNAPCRAFT_TOKEN: ${{ secrets.METANORMA_SNAPCRAFT_TOKEN }}
        run: |
          echo "${SNAPCRAFT_TOKEN}" > .snapcraft_token
          snapcraft login --with .snapcraft_token
          snapcraft push --release=stable snap/*.snap
