# yaml-language-server: $schema=https://raw.githubusercontent.com/canonical/snapcraft/refs/heads/main/schema/snapcraft.json
---
name: metanorma
base: core24
summary: Metanorma standards publication suite
description: "Metanorma is the award-winning, open-source, digital standards suite for authoring and publishing adopted by SDOs worldwide. Start delivering tomorrow's standards, today."
grade: stable
adopt-info: packed-mn
confinement: strict
platforms:
  amd64:
    build-on: [amd64]
    build-for: [amd64]
  arm64:
    build-on: [arm64]
    build-for: [arm64]

layout:
  /etc/java-21-openjdk:
    bind: $SNAP/etc/java-21-openjdk
  /usr/bin/java:
    symlink: $SNAP/usr/lib/jvm/java-21-openjdk-$CRAFT_ARCH_BUILD_FOR/bin/java
apps:
  metanorma:
    command: bin/metanorma
    environment:
      PATH: $SNAP/local/bin:$SNAP/usr/bin:$PATH
      DEBUG: "*:*"
      GIT_EXEC_PATH: $SNAP/usr/lib/git-core # https://forum.snapcraft.io/t/using-git-from-a-program/12599/11?u=camobap
      GIT_CONFIG_NOSYSTEM: 'true' # https://github.com/metanorma/metanorma-snap/issues/12
      XDG_DATA_HOME: $SNAP/usr/share # NPE in sun.awt.FontConfiguration.getVersion, https://bugs.launchpad.net/ubuntu/+source/snapd/+bug/1576303
    plugs:
      - browser-support
      - network
      - gsettings
      - home
  plantuml:
    command: bin/plantuml
parts:
  scripts:
    source: scripts
    plugin: dump
    organize:
      plantuml: bin/plantuml
  packed-mn:
    plugin: dump
    source: .
    override-pull: |
      # Use contents of the VERSION file (e.g. 1.2.3) as the snap package version
      export VERSION=$(cat $SNAPCRAFT_PROJECT_DIR/VERSION)
      echo "Setting snap version to '$VERSION'"
      craftctl set version="$VERSION"

      if [ "$CRAFT_ARCH_BUILD_FOR" = "amd64" ]; then
        ARCH_NAME="x86_64"
      elif [ "$CRAFT_ARCH_BUILD_FOR" = "arm64" ]; then
        ARCH_NAME="aarch64"
      else
        echo "Unsupported architecture: $CRAFT_ARCH_BUILD_FOR"
        exit 1
      fi

      curl --silent --show-error --location "https://github.com/metanorma/packed-mn/releases/download/v$VERSION/metanorma-linux-${ARCH_NAME}.tgz" | tar xz
      # Rename the extracted binary to a consistent name
      mv metanorma-linux-${ARCH_NAME} metanorma-binary
    override-build: |
      # Copy to install directory
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp metanorma-binary $SNAPCRAFT_PART_INSTALL/bin/metanorma
      craftctl default
    build-packages:
      - curl
    stage-packages:
      - git-core
      - zlib1g
      - libgcrypt20
      - liblzma5
      - libdb5.3
      - libselinux1
      - libsystemd0
      - libtinfo6
      - libudev1
      - libmspack-dev
  plantuml:
    plugin: nil
    override-build: |
      mkdir $SNAPCRAFT_PART_INSTALL/jar
      curl --silent --show-error --location https://github.com/plantuml/plantuml/releases/latest/download/plantuml.jar -o $SNAPCRAFT_PART_INSTALL/jar/plantuml.jar

      # Create symbolic links for Java executables following MakeMKV pattern
      JDK=$(find /usr/lib/jvm -type d -name "java-21-openjdk-*" | head -n1 | xargs basename)
      JDKBIN=../lib/jvm/$JDK/bin
      for exec in java; do
        ln -sf $JDKBIN/$exec $SNAPCRAFT_PART_INSTALL/usr/bin/$exec
      done
    build-packages:
      - curl
      # https://askubuntu.com/questions/1054854/snap-package-error-uploading
      - ca-certificates
      - ca-certificates-java
      - openjdk-21-jre-headless
    stage-packages:
      - libgcrypt20
      - liblzma5
      - libselinux1
      - libsystemd0
      - zlib1g
      - graphviz
      - on amd64: [openjdk-21-jre-headless:amd64]
      - on arm64: [openjdk-21-jre-headless:arm64]
  xml2rfc:
    plugin: python
    source: .
    python-packages: [xml2rfc]
    stage-packages:
      - libbz2-1.0
      - libtinfo6
      - zlib1g
      - libdb5.3
      - libncursesw6
